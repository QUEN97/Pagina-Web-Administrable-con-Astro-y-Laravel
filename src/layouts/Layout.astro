---
import "@fontsource-variable/inter";
import "~/styles/index.css";
const { generator, site } = Astro;
const description = "Lavandería, lavoplus";
interface Props {
    title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es" class="h-full motion-safe:scroll-smooth" data-theme="dark">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
        <meta name="generator" content={generator} />

        <title>Lavandería Lavo PLus</title>
        <meta name="description" content={description} />

        <!-- social media -->
        <meta property="og:title" content="Astro" />
        <meta property="og:type" content="website" />
        <meta property="og:description" content={description} />
        <meta property="og:url" content={site} />
        <meta name="twitter:card" content="summary_large_image" />
        <title>{title}</title>
        <!-- initialize theme -->
        <script is:inline>
            const themeSaved = localStorage.getItem("theme");

            if (themeSaved) {
                document.documentElement.dataset.theme = themeSaved;
            } else {
                const prefersDark = window.matchMedia(
                    "(prefers-color-scheme: dark)",
                ).matches;
                document.documentElement.dataset.theme = prefersDark
                    ? "dark"
                    : "light";
            }

            window
                .matchMedia("(prefers-color-scheme: dark)")
                .addEventListener("change", (event) => {
                    if (!localStorage.getItem("theme")) {
                        document.documentElement.dataset.theme = event.matches
                            ? "dark"
                            : "light";
                    }
                });
        </script>
    </head>
    <body
        class="h-full overflow-x-hidden bg-default text-default text-base selection:bg-secondary selection:text-white"
    >
        <slot />
        <style is:global>
            /* CSS rules for the page scrollbar and scrolling experience with lenis library */
            .scrollbar-hide::-webkit-scrollbar {
                display: none;
            }

            .scrollbar-hide {
                -ms-overflow-style: none;
                scrollbar-width: none;
            }

            .AnimateOpacityScale {
                animation: OpacityScale linear both;
                animation-timeline: view();
                animation-range: entry 0% cover 30%;
            }
            @keyframes OpacityScale {
                from {
                    opacity: 0;
                    transform: scale(0);
                }
                to {
                    opacity: 1;
                    transform: scale(1);
                }
            }
        </style>
    </body>
</html>
