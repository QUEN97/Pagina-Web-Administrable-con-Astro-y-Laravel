---
import ContentSection from "~/components/content-section.astro";

// Obtener imágenes desde la API
let images = [];
let isLoading = true;
let error = null;

try {
  const response = await fetch("http://127.0.0.1:8000/api/images"); // URL de la API Laravel, cambiar por el dominio a usar
  const data = await response.json();

  // Asegurarte de que se obtuvieron imágenes correctamente
  if (Array.isArray(data)) {
    images = data.map((image) => ({
      id: image.id,
      url: `http://127.0.0.1:8000/storage/${image.archivo_path}`, // Concateno la ruta completa de la imagen
    }));
  } else {
    error = "La API no devolvió una lista válida de imágenes.";
  }
} catch (err) {
  error = "No se pudieron cargar las imágenes.";
} finally {
  isLoading = false;
}

// Llamar a la API de Laravel para obtener datos dinámicos
let imageData = null;

try {
  const response = await fetch("http://127.0.0.1:8000/api/image");
  imageData = await response.json();
} catch (err) {
  error = "No se pudo cargar el contenido dinámico.";
}
---

<ContentSection title={imageData?.title || "Cargando..."} id="galeria">
  <Fragment slot="lead">
    {imageData ? (
      <>
    {imageData.lead_text.text1}  <span class="text-primary"> {imageData.lead_text.highlight1}</span>
    </>
    ) : (
      <p>Cargando...</p>
    )}
  </Fragment>
  
  {isLoading && <p>Cargando imágenes...</p>}

  {error && <p class="text-red-500">{error}</p>}

  <div class="max-w-6xl space-y-2">
    <!-- Contenedor principal de Swiper -->
    <div class="swiper">
      <!-- Wrapper adicional requerido -->
      {!isLoading && !error && (
      <div class="swiper-wrapper" id="my-slider">
        {images.map((image) => (
        <a
          key={image.id}
          class="swiper-slide"
          href={image.url} 
          data-pswp-width="800"
          data-pswp-height="800"
          target="_blank"
          data-cropped="true"
        >
          <img src={image.url} alt="Imagen" loading="lazy" />
        </a>
        ))}
      </div>
      )}
      <!-- Botones de navegación -->
      <div class="swiper-button-prev"></div>
      <div class="swiper-button-next"></div>
    </div>
  </div>

  <style>
    .swiper-slide {
      height: 600px;
      border-radius: 10px;
      overflow: hidden;
    }
    .swiper-slide img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    @media (max-width: 768px) {
      .swiper-slide {
        width: 70%;
        height: 400px;
      }
      .swiper-button-prev,
      .swiper-button-next {
        display: none;
      }
    }
    .swiper-button-next,
    .swiper-button-prev {
      background-image: url("/svgs/arrow-next.svg");
      background-repeat: no-repeat;
      background-size: 100% auto;
      background-color: aliceblue;
      border-radius: 50%;
      width: 60px;
      height: 60px;
    }
    .swiper-button-prev {
      transform: rotate(180deg);
    }
    .swiper-button-next::after,
    .swiper-button-prev::after {
      content: "";
    }
  </style>

  <script>
    import Swiper from "swiper";
    import "swiper/css";
    import { Navigation } from "swiper/modules";
    import "swiper/css/navigation";
    import PhotoSwipeLightbox from "photoswipe/lightbox";
    import "photoswipe/style.css";

    // Configurar Swiper
    const swiper = new Swiper(".swiper", {
      modules: [Navigation],
      loop: true,
      slidesPerView: "auto",
      spaceBetween: 20,
      breakpoints: {
        768: {
          slidesPerView: 2,
          spaceBetween: 30,
        },
        1024: {
          slidesPerView: 3,
          spaceBetween: 40,
        },
      },
      navigation: {
        prevEl: ".swiper-button-prev",
        nextEl: ".swiper-button-next",
      },
    });

    // Configurar e inicializar PhotoSwipe
    const lightbox = new PhotoSwipeLightbox({
      gallery: "#my-slider",
      children: "a",
      pswpModule: () => import("photoswipe"),
    });
    lightbox.init();
  </script>
</ContentSection>
